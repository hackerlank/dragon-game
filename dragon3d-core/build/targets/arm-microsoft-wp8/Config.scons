#!/usr/bin/env python
# Licensed under the MIT license:
# http://www.opensource.org/licenses/mit-license.php
"""
SCons Tool to Build Wp8 Applications
"""

import os.path
import re
import sys

from SCons.Tool.MSCommon import msvc_exists, msvc_setup_env
from SCons.Tool.MSCommon.vc import get_default_version, find_vc_pdir

env.AppendUnique(CPPDEFINES = ["_WIN32", "WIN32", "_WINDOWS", "_UNICODE", "UNICODE", "NOMINMAX"])
env.AppendUnique(CPPDEFINES = ["PSAPI_VERSION=2", "WINAPI_FAMILY=WINAPI_FAMILY_PHONE_APP"])

# for gtest
env.AppendUnique(CPPDEFINES = ["GTEST_OS_WINDOWS_MOBILE"])

env.AppendUnique(CCFLAGS = '/EHsc')
env.AppendUnique(CCFLAGS = '/GS')

# C++ Runtime Extend
env.AppendUnique(CCFLAGS = '/ZW')

if env['build_config'] == 'debug':
    env.AppendUnique(CCFLAGS = '/MDd')
else:
    env.AppendUnique(CCFLAGS = '/MD')

env.AppendUnique(LINKFLAGS = '/MACHINE:ARM')
env.AppendUnique(LINKFLAGS = '/WINMD:NO')

# link lib
env.AppendUnique(LINKFLAGS = 'WindowsPhoneCore.lib')
env.AppendUnique(LINKFLAGS = 'RuntimeObject.lib')
env.AppendUnique(LINKFLAGS = 'PhoneAppModelHost.lib')
env.AppendUnique(LINKFLAGS = 'd3d11.lib')


if env['build_config'] == 'debug':
    env.AppendUnique(CPPDEFINES = "_DEBUG")

# build config for wp8
def find_vc_sdk_dir(env):
    #print('msvc_setup_env()')
 
    version = get_default_version(env)
    if version is None:
        warn_msg = "No version of Visual Studio compiler found - C/C++ " \
                   "compilers most likely not set correctly"
        SCons.Warnings.warn(SCons.Warnings.VisualCMissingWarning, warn_msg)
        return None

    pdir = find_vc_pdir(version)
    if pdir is None:
        raise NoVersionFound("No version of Visual Studio found")
        
    return pdir


VC_SDK_HOME = find_vc_sdk_dir(env)
WP8_SDK_HOME= VC_SDK_HOME + '/WPSDK/WP80'

env['ENV']['INCLUDE'] = ''
env['ENV']['LIB'] = ''
env['ENV']['LIBPATH'] = ''
env['ENV']['PATH'] = ''

BATCH_SCRIPT = WP8_SDK_HOME + '/bin/x86_arm/vcvarsphonex86_arm.bat'

env['MSVC_USE_SCRIPT'] = BATCH_SCRIPT
msvc_setup_env(env)

env.PrependENVPath('INCLUDE', [WP8_SDK_HOME + '/include'])
env.PrependENVPath('LIB', [WP8_SDK_HOME + '/lib/arm'])
env.PrependENVPath('LIBPATH', [WP8_SDK_HOME + '/lib/arm'])
env.PrependENVPath('PATH', [WP8_SDK_HOME + '/bin/x86_arm', WP8_SDK_HOME + '/bin'])


def preBuildFunction(target, source, env):
    if target == "dragon3d-core-test":
        return False
    else:
        return True

env['DRAGON_MODULE_PRE_PROCESSOR'] = preBuildFunction